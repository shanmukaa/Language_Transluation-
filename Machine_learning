{"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":11931048,"sourceType":"datasetVersion","datasetId":7501022}],"dockerImageVersionId":31040,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import pandas as pd\nfrom sklearn.linear_model import LogisticRegression","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T08:59:23.614058Z","iopub.execute_input":"2025-05-24T08:59:23.614385Z","iopub.status.idle":"2025-05-24T08:59:23.619051Z","shell.execute_reply.started":"2025-05-24T08:59:23.614362Z","shell.execute_reply":"2025-05-24T08:59:23.617785Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"#Load the data set\nclaimants = pd.read_csv(r'/kaggle/input/claimants/claimants.csv')\nclaimants.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T09:00:25.584751Z","iopub.execute_input":"2025-05-24T09:00:25.585535Z","iopub.status.idle":"2025-05-24T09:00:25.633515Z","shell.execute_reply.started":"2025-05-24T09:00:25.585500Z","shell.execute_reply":"2025-05-24T09:00:25.632719Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# dropping the case number columns as it is not required\nclaimants.drop([\"CASENUM\"],inplace=True,axis = 1)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T09:00:32.117953Z","iopub.execute_input":"2025-05-24T09:00:32.118324Z","iopub.status.idle":"2025-05-24T09:00:32.128598Z","shell.execute_reply.started":"2025-05-24T09:00:32.118301Z","shell.execute_reply":"2025-05-24T09:00:32.127735Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"#Shape of the data set\nclaimants.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T09:00:36.464755Z","iopub.execute_input":"2025-05-24T09:00:36.465384Z","iopub.status.idle":"2025-05-24T09:00:36.471406Z","shell.execute_reply.started":"2025-05-24T09:00:36.465349Z","shell.execute_reply":"2025-05-24T09:00:36.470502Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Removing NA values in data set\nclaimants = claimants.dropna()\nclaimants.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T09:00:38.037772Z","iopub.execute_input":"2025-05-24T09:00:38.038141Z","iopub.status.idle":"2025-05-24T09:00:38.046995Z","shell.execute_reply.started":"2025-05-24T09:00:38.038114Z","shell.execute_reply":"2025-05-24T09:00:38.046001Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Dividing our data into input and output variables \nX = claimants.iloc[:,1:]\nY = claimants.iloc[:,0]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T09:00:40.958672Z","iopub.execute_input":"2025-05-24T09:00:40.959708Z","iopub.status.idle":"2025-05-24T09:00:40.964493Z","shell.execute_reply.started":"2025-05-24T09:00:40.959677Z","shell.execute_reply":"2025-05-24T09:00:40.963435Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"#Logistic regression and fit the model\nclassifier = LogisticRegression()\nclassifier.fit(X,Y)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T09:00:42.572961Z","iopub.execute_input":"2025-05-24T09:00:42.573308Z","iopub.status.idle":"2025-05-24T09:00:42.874053Z","shell.execute_reply.started":"2025-05-24T09:00:42.573286Z","shell.execute_reply":"2025-05-24T09:00:42.871893Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"#Predict for X dataset\ny_pred = classifier.predict(X)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T09:00:50.217438Z","iopub.execute_input":"2025-05-24T09:00:50.217725Z","iopub.status.idle":"2025-05-24T09:00:50.224318Z","shell.execute_reply.started":"2025-05-24T09:00:50.217706Z","shell.execute_reply":"2025-05-24T09:00:50.223263Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"y_pred_df= pd.DataFrame({'actual': Y,\n                         'predicted_prob': classifier.predict(X)})","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T09:00:53.190451Z","iopub.execute_input":"2025-05-24T09:00:53.190749Z","iopub.status.idle":"2025-05-24T09:00:53.197960Z","shell.execute_reply.started":"2025-05-24T09:00:53.190727Z","shell.execute_reply":"2025-05-24T09:00:53.197064Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"y_pred_df","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T09:00:56.229574Z","iopub.execute_input":"2025-05-24T09:00:56.230010Z","iopub.status.idle":"2025-05-24T09:00:56.243947Z","shell.execute_reply.started":"2025-05-24T09:00:56.229962Z","shell.execute_reply":"2025-05-24T09:00:56.243062Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Confusion Matrix for the model accuracy\nfrom sklearn.metrics import confusion_matrix\nconfusion_matrix = confusion_matrix(Y,y_pred)\nprint (confusion_matrix)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T09:00:59.635529Z","iopub.execute_input":"2025-05-24T09:00:59.635848Z","iopub.status.idle":"2025-05-24T09:00:59.645606Z","shell.execute_reply.started":"2025-05-24T09:00:59.635814Z","shell.execute_reply":"2025-05-24T09:00:59.644529Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"accuracy=((381+395)/(381+197+123+395))*100\naccuracy","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T09:01:01.047075Z","iopub.execute_input":"2025-05-24T09:01:01.047993Z","iopub.status.idle":"2025-05-24T09:01:01.053190Z","shell.execute_reply.started":"2025-05-24T09:01:01.047879Z","shell.execute_reply":"2025-05-24T09:01:01.052188Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"#Classification report\nfrom sklearn.metrics import classification_report\nprint(classification_report(Y,y_pred))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T09:01:04.815303Z","iopub.execute_input":"2025-05-24T09:01:04.815618Z","iopub.status.idle":"2025-05-24T09:01:04.830621Z","shell.execute_reply.started":"2025-05-24T09:01:04.815594Z","shell.execute_reply":"2025-05-24T09:01:04.829594Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# ROC Curve","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T09:01:07.031058Z","iopub.execute_input":"2025-05-24T09:01:07.031375Z","iopub.status.idle":"2025-05-24T09:01:07.035753Z","shell.execute_reply.started":"2025-05-24T09:01:07.031354Z","shell.execute_reply":"2025-05-24T09:01:07.034733Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"from sklearn.metrics import roc_curve\nfrom sklearn.metrics import roc_auc_score\n\nfpr, tpr, thresholds = roc_curve(Y, classifier.predict_proba (X)[:,1])\n\nauc = roc_auc_score(Y, y_pred)\n\nimport matplotlib.pyplot as plt\nplt.plot(fpr, tpr, color='red', label='logit model ( area  = %0.2f)'%auc)\nplt.plot([0, 1], [0, 1], 'k--')\nplt.xlabel('False Positive Rate or [1 - True Negative Rate]')\nplt.ylabel('True Positive Rate')\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T09:01:09.965808Z","iopub.execute_input":"2025-05-24T09:01:09.966279Z","iopub.status.idle":"2025-05-24T09:01:10.281262Z","shell.execute_reply.started":"2025-05-24T09:01:09.966252Z","shell.execute_reply":"2025-05-24T09:01:10.280335Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"auc","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-24T09:01:14.491072Z","iopub.execute_input":"2025-05-24T09:01:14.491440Z","iopub.status.idle":"2025-05-24T09:01:14.497221Z","shell.execute_reply.started":"2025-05-24T09:01:14.491413Z","shell.execute_reply":"2025-05-24T09:01:14.496322Z"}},"outputs":[],"execution_count":null}]}